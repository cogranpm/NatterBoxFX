plugins {
    id 'java'
    id 'application'
    id 'org.jetbrains.kotlin.jvm' version '1.6.21'
    id 'org.jetbrains.kotlin.plugin.serialization' version '1.6.21'
    id 'org.openjfx.javafxplugin' version '0.0.13'
}

group 'com.parinherm'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

ext {
    junitVersion = '5.7.1'
}

sourceCompatibility = '17'
targetCompatibility = '17'

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

application {
    mainModule = 'com.parinherm.natterfx'
    mainClass = 'com.parinherm.natterfx.HelloApplication'
}

[compileKotlin, compileTestKotlin].forEach {
    it.kotlinOptions {
        jvmTarget = '17'
    }
}

javafx {
    version = '17.0.0.1'
    modules = ['javafx.controls', 'javafx.fxml']
}

dependencies {
    implementation('org.controlsfx:controlsfx:11.1.1')
    implementation('org.kordamp.ikonli:ikonli-javafx:12.3.1')
    implementation("org.kordamp.ikonli:ikonli-fontawesome-pack:12.3.1")
    implementation 'org.kordamp.ikonli:ikonli-materialdesign2-pack:12.3.1'
    implementation('com.alphacephei:vosk:0.3.38')
    implementation("org.jetbrains.kotlinx:kotlinx-coroutines-core:1.6.4")
    runtimeOnly("org.jetbrains.kotlinx:kotlinx-coroutines-core-jvm:1.6.4")
    implementation('org.jetbrains.kotlinx:kotlinx-coroutines-javafx:1.6.4')
    implementation("org.jetbrains.kotlinx:kotlinx-serialization-json-jvm:1.4.0")
    implementation 'org.jetbrains.exposed:exposed-core:0.39.2'
    implementation 'org.jetbrains.exposed:exposed-dao:0.39.2'
    implementation 'org.jetbrains.exposed:exposed-jdbc:0.39.2'
    implementation 'org.jetbrains.exposed:exposed-java-time:0.39.2'
    implementation("com.h2database:h2:2.1.214")
    implementation("org.slf4j:slf4j-nop:2.0.0")
    //testImplementation 'org.slf4j:slf4j-simple:2.0.0'
    //implementation 'org.mariadb.jdbc:mariadb-java-client:3.0.7'
    //implementation 'ch.vorburger.mariaDB4j:mariaDB4j:2.5.3'
    testImplementation("org.junit.jupiter:junit-jupiter-api:${junitVersion}")
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:${junitVersion}")
}

test {
    useJUnitPlatform()
}


distributions {
    main {
        distributionBaseName = 'NatterFX'
        contents {
            from 'src/readme.md'
            into('model') {
                from '../model'
            }
        }
    }
}